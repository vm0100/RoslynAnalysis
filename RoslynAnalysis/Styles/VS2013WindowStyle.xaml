<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:MLib_reskeys="clr-namespace:MLib.Themes;assembly=MLib"
                    xmlns:convert="clr-namespace:RoslynAnalysis.Converters">

    <convert:ActiveDocumentConverter x:Key="ActiveDocumentConverter" x:Name="ActiveDocumentConverter" />

    <SolidColorBrush x:Key="IconBrush" Color="#865FC5" />
    <SolidColorBrush x:Key="IconInactiveBrush" Color="#8F8F91" />
    <SolidColorBrush x:Key="HeaderBackground" Color="#EEEEF2" />
    <SolidColorBrush x:Key="StatusBarBackground" Color="#007ACC" />
    <SolidColorBrush x:Key="StatusBarForeground" Color="White" />
    <SolidColorBrush x:Key="SystemButtonsForeground" Color="Black" />
    <SolidColorBrush x:Key="SystemButtonsInactiveForeground" Color="#8F8F91" />
    <SolidColorBrush x:Key="SystemButtonsMouseOverBackground" Color="#FCFCFD" />
    <SolidColorBrush x:Key="SystemButtonsMousePressedForeground" Color="White" />
    <SolidColorBrush x:Key="SystemButtonsMousePressedBackground" Color="#007ACC" />
    <SolidColorBrush x:Key="WindowForeground" Color="Black" />
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#9A9EB8" />
    <SolidColorBrush x:Key="WindowInactiveBorderBrush" Color="#CBCDDA" />
    <SolidColorBrush x:Key="ToolBarGripper" Color="#999999" />
    <SolidColorBrush x:Key="ProjectNameForeground" Color="Black" />
    <SolidColorBrush x:Key="ProjectNameInactiveForeground" Color="#929496" />
    <SolidColorBrush x:Key="ProjectNameBackground" Color="#E0E3E6" />
    <SolidColorBrush x:Key="ScrollViewerRectBackground" Color="#F5F5F5" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MLib_reskeys:ResourceKeys}, ResourceId=NormalBackgroundBrushKey}" Color="Transparent" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MLib_reskeys:ResourceKeys}, ResourceId=TopLevelHeaderMenuBackgroundKey}" Color="Transparent" />

    <!--  Window  -->
    <Style TargetType="{x:Type Window}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
        <Style.Triggers>
            <Trigger Property="IsActive" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource WindowInactiveBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  icon  -->
    <Path x:Key="Vs2013Icon" Height="20" Margin="4,0"
          Fill="{DynamicResource IconBrush}"
          Stretch="Uniform">
        <Path.Data>
            <GeometryGroup FillRule="EvenOdd">
                <PathGeometry Figures="M68.89,95.6a6,6,0,0,0,3.93-.44L92.6,85.65A6,6,0,0,0,96,80.24V15.76a6,6,0,0,0-3.4-5.41L72.82.84A6,6,0,0,0,68.34.55,6,6,0,0,0,66,2L34.12,37.26,15.5,22l-1.63-1.4a4,4,0,0,0-3.61-.83,2.55,2.55,0,0,0-.53.18L2.46,23A4,4,0,0,0,0,26.37c0,.1,0,.2,0,.3V69.33c0,.1,0,.2,0,.3A4,4,0,0,0,2.46,73l7.27,3a2.55,2.55,0,0,0,.53.18,4,4,0,0,0,3.61-.83L15.5,74,34.12,58.74,66,94A6,6,0,0,0,68.89,95.6ZM72,27.68,47.21,48,72,68.32ZM12,34.27,24.41,48,12,61.73Z" />
            </GeometryGroup>
        </Path.Data>
    </Path>

    <!--  右侧关闭按钮  -->
    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ToolTip" Value="Close" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path Width="46" Height="32" Margin="0,2,0,0" Data="M 18,11 27,20 M 18,20 27,11"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}" />
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  右侧最大化按钮  -->
    <Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="Maximize" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path x:Name="MaximizePath" Width="46" Height="32" Margin="0,2,0,0" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}" />
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  右侧缩小按钮  -->
    <Style x:Key="RestoreDownButton" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ToolTip" Value="Restore Down" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path x:Name="RestoreDownPath" Width="46" Height="32" Margin="0,2,0,0" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}" />
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="Maximized">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  右侧最小化按钮  -->
    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ToolTip" Value="Minimize" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemButtonsForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path Width="46" Height="32" Margin="0,2,0,0" Data="M 18,15 H 28"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsMousePressedForeground}" />
                            <Setter Property="Background" Value="{DynamicResource SystemButtonsMousePressedBackground}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SystemButtonsInactiveForeground}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>